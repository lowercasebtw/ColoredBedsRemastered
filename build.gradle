plugins {
    id "fabric-loom" version "${loom_version}"
    id "legacy-looming" version "${loom_version}"
    id "maven-publish"
    id "com.diffplug.spotless" version "${spotless_version}"
}

version = "${project.mod_version}-${getCheckedOutGitCommitHash()}+mc${project.minecraft_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

repositories {
    maven {
        name = "cursed-mappings"
        url = "https://raw.githubusercontent.com/BleachDev/cursed-mappings/main/"
    }
}

loom {
    runs {
        remove server
    }
}

legacyLooming {
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.legacyfabric:yarn:${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    modImplementation("net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}")
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = 8
    }
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// Configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
    }
}

// Header
spotless {
    def licenseHeader = rootProject.file("HEADER")
    java {
        licenseHeaderFile(licenseHeader)
    }
}